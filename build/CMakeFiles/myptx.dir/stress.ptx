//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-29069683
// Cuda compilation tools, release 11.1, V11.1.74
// Based on LLVM 3.4svn
//

.version 7.1
.target sm_61
.address_size 64

	// .globl	_Z8launchSMPii
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
// _ZZ8launchSMPiiE7blk_log has been demoted
// clock_begin has been demoted
// clock_now has been demoted
.global .align 1 .b8 $str[27] = {98, 108, 111, 99, 107, 32, 114, 101, 116, 117, 114, 110, 101, 100, 32, 111, 110, 32, 115, 109, 105, 100, 32, 37, 100, 10, 0};
.global .align 1 .b8 $str$1[43] = {98, 108, 95, 105, 100, 32, 37, 100, 32, 108, 99, 108, 95, 116, 104, 100, 32, 37, 100, 32, 108, 99, 108, 95, 119, 114, 112, 32, 37, 100, 32, 119, 114, 112, 95, 109, 97, 120, 32, 37, 100, 10, 0};

.visible .entry _Z8launchSMPii(
	.param .u64 _Z8launchSMPii_param_0,
	.param .u32 _Z8launchSMPii_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<56>;
	.reg .b64 	%rd<60>;
	// demoted variable
	.shared .align 2 .b8 _ZZ8launchSMPiiE7blk_log[32768];

	ld.param.u64 	%rd5, [_Z8launchSMPii_param_0];
	ld.param.u32 	%r15, [_Z8launchSMPii_param_1];
	cvta.to.global.u64 	%rd1, %rd5;
	// inline asm
	mov.u32 %r16, %smid;
	// inline asm
	setp.ne.s32	%p1, %r16, 0;
	@%p1 bra 	BB0_6;

	mov.u32 	%r18, %tid.y;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r21, %r19, %r18, %r20;
	shr.s32 	%r22, %r21, 31;
	shr.u32 	%r23, %r22, 27;
	add.s32 	%r24, %r21, %r23;
	shr.s32 	%r1, %r24, 5;
	mov.u32 	%r2, %ctaid.x;
	mul.wide.u32 	%rd6, %r2, -858993459;
	shr.u64 	%rd7, %rd6, 36;
	cvt.u32.u64	%r25, %rd7;
	mul.lo.s32 	%r3, %r15, 32640;
	shl.b32 	%r26, %r1, 8;
	mad.lo.s32 	%r27, %r25, 8192, %r26;
	shl.b32 	%r28, %r27, 1;
	mov.u32 	%r29, _ZZ8launchSMPiiE7blk_log;
	add.s32 	%r52, %r29, %r28;
	mov.u32 	%r53, -256;

BB0_2:
	// inline asm
	mov.u64 	%rd8, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd9, %clock64;
	// inline asm
	sub.s64 	%rd40, %rd9, %rd8;
	st.shared.u16 	[%r52], %rd40;
	// inline asm
	mov.u64 	%rd10, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd11, %clock64;
	// inline asm
	sub.s64 	%rd41, %rd11, %rd10;
	st.shared.u16 	[%r52+2], %rd41;
	// inline asm
	mov.u64 	%rd12, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd13, %clock64;
	// inline asm
	sub.s64 	%rd42, %rd13, %rd12;
	st.shared.u16 	[%r52+4], %rd42;
	// inline asm
	mov.u64 	%rd14, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd15, %clock64;
	// inline asm
	sub.s64 	%rd43, %rd15, %rd14;
	st.shared.u16 	[%r52+6], %rd43;
	// inline asm
	mov.u64 	%rd16, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd17, %clock64;
	// inline asm
	sub.s64 	%rd44, %rd17, %rd16;
	st.shared.u16 	[%r52+8], %rd44;
	// inline asm
	mov.u64 	%rd18, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd19, %clock64;
	// inline asm
	sub.s64 	%rd45, %rd19, %rd18;
	st.shared.u16 	[%r52+10], %rd45;
	// inline asm
	mov.u64 	%rd20, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd21, %clock64;
	// inline asm
	sub.s64 	%rd46, %rd21, %rd20;
	st.shared.u16 	[%r52+12], %rd46;
	// inline asm
	mov.u64 	%rd22, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd23, %clock64;
	// inline asm
	sub.s64 	%rd47, %rd23, %rd22;
	st.shared.u16 	[%r52+14], %rd47;
	// inline asm
	mov.u64 	%rd24, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd25, %clock64;
	// inline asm
	sub.s64 	%rd48, %rd25, %rd24;
	st.shared.u16 	[%r52+16], %rd48;
	// inline asm
	mov.u64 	%rd26, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd27, %clock64;
	// inline asm
	sub.s64 	%rd49, %rd27, %rd26;
	st.shared.u16 	[%r52+18], %rd49;
	// inline asm
	mov.u64 	%rd28, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd29, %clock64;
	// inline asm
	sub.s64 	%rd50, %rd29, %rd28;
	st.shared.u16 	[%r52+20], %rd50;
	// inline asm
	mov.u64 	%rd30, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd31, %clock64;
	// inline asm
	sub.s64 	%rd51, %rd31, %rd30;
	st.shared.u16 	[%r52+22], %rd51;
	// inline asm
	mov.u64 	%rd32, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd33, %clock64;
	// inline asm
	sub.s64 	%rd52, %rd33, %rd32;
	st.shared.u16 	[%r52+24], %rd52;
	// inline asm
	mov.u64 	%rd34, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd35, %clock64;
	// inline asm
	sub.s64 	%rd53, %rd35, %rd34;
	st.shared.u16 	[%r52+26], %rd53;
	// inline asm
	mov.u64 	%rd36, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd37, %clock64;
	// inline asm
	sub.s64 	%rd54, %rd37, %rd36;
	st.shared.u16 	[%r52+28], %rd54;
	// inline asm
	mov.u64 	%rd38, %clock64;
	// inline asm
	// inline asm
	mov.u64 	%rd39, %clock64;
	// inline asm
	sub.s64 	%rd55, %rd39, %rd38;
	st.shared.u16 	[%r52+30], %rd55;
	add.s32 	%r52, %r52, 32;
	add.s32 	%r53, %r53, 16;
	setp.ne.s32	%p2, %r53, 0;
	@%p2 bra 	BB0_2;

	mul.lo.s32 	%r9, %r15, 255;
	bar.sync 	0;
	add.s32 	%r54, %r29, %r28;
	mul.wide.s32 	%rd2, %r27, 4;
	mov.u32 	%r55, -256;
	mov.u64 	%rd59, %rd1;

BB0_4:
	ld.shared.u16 	%r36, [%r54];
	add.s64 	%rd58, %rd59, %rd2;
	st.global.u32 	[%rd58], %r36;
	ld.shared.u16 	%r37, [%r54+2];
	st.global.u32 	[%rd58+4], %r37;
	ld.shared.u16 	%r38, [%r54+4];
	st.global.u32 	[%rd58+8], %r38;
	ld.shared.u16 	%r39, [%r54+6];
	st.global.u32 	[%rd58+12], %r39;
	ld.shared.u16 	%r40, [%r54+8];
	st.global.u32 	[%rd58+16], %r40;
	ld.shared.u16 	%r41, [%r54+10];
	st.global.u32 	[%rd58+20], %r41;
	ld.shared.u16 	%r42, [%r54+12];
	st.global.u32 	[%rd58+24], %r42;
	ld.shared.u16 	%r43, [%r54+14];
	st.global.u32 	[%rd58+28], %r43;
	ld.shared.u16 	%r44, [%r54+16];
	st.global.u32 	[%rd58+32], %r44;
	ld.shared.u16 	%r45, [%r54+18];
	st.global.u32 	[%rd58+36], %r45;
	ld.shared.u16 	%r46, [%r54+20];
	st.global.u32 	[%rd58+40], %r46;
	ld.shared.u16 	%r47, [%r54+22];
	st.global.u32 	[%rd58+44], %r47;
	ld.shared.u16 	%r48, [%r54+24];
	st.global.u32 	[%rd58+48], %r48;
	ld.shared.u16 	%r49, [%r54+26];
	st.global.u32 	[%rd58+52], %r49;
	ld.shared.u16 	%r50, [%r54+28];
	st.global.u32 	[%rd58+56], %r50;
	ld.shared.u16 	%r51, [%r54+30];
	st.global.u32 	[%rd58+60], %r51;
	add.s64 	%rd59, %rd59, 64;
	add.s32 	%r54, %r54, 32;
	add.s32 	%r55, %r55, 16;
	setp.ne.s32	%p3, %r55, 0;
	@%p3 bra 	BB0_4;

	st.global.u32 	[%rd1], %r3;
	st.global.u32 	[%rd1+4], %r9;

BB0_6:
	ret;
}

	// .globl	_Z10testKernelPy
.visible .entry _Z10testKernelPy(
	.param .u64 _Z10testKernelPy_param_0
)
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [_Z10testKernelPy_param_0];
	cvta.to.global.u64 	%rd3, %rd2;
	// inline asm
	mov.u64 	%rd1, %clock64;
	// inline asm
	mov.u32 	%r2, %ctaid.x;
	mul.wide.u32 	%rd4, %r2, 8;
	add.s64 	%rd5, %rd3, %rd4;
	st.global.u64 	[%rd5], %rd1;
	// inline asm
	mov.u32 %r1, %smid;
	// inline asm
	cvt.s64.s32	%rd6, %r1;
	st.global.u64 	[%rd5+160], %rd6;
	ret;
}

	// .globl	_Z20memoryKernelSingleSMPPjPiiyiS_bbii
.visible .entry _Z20memoryKernelSingleSMPPjPiiyiS_bbii(
	.param .u64 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_0,
	.param .u64 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_1,
	.param .u32 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_2,
	.param .u64 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_3,
	.param .u32 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_4,
	.param .u64 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_5,
	.param .u8 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_6,
	.param .u8 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_7,
	.param .u32 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_8,
	.param .u32 _Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_9
)
{
	.local .align 16 .b8 	__local_depot2[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<23>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<135>;
	.reg .b64 	%rd<34>;
	// demoted variable
	.shared .align 8 .u64 clock_begin;
	// demoted variable
	.shared .align 8 .u64 clock_now;

	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_0];
	ld.param.u64 	%rd5, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_1];
	ld.param.u32 	%r55, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_2];
	ld.param.u64 	%rd6, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_3];
	ld.param.u32 	%r56, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_4];
	ld.param.u32 	%r57, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_8];
	ld.param.u32 	%r58, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_9];
	ld.param.s8 	%rs2, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_7];
	ld.param.s8 	%rs1, [_Z20memoryKernelSingleSMPPjPiiyiS_bbii_param_6];
	// inline asm
	mov.u32 %r59, %smid;
	// inline asm
	setp.ge.s32	%p2, %r59, %r58;
	setp.gt.s32	%p3, %r57, %r58;
	and.pred  	%p4, %p3, %p2;
	mov.u32 	%r60, %ntid.x;
	mov.u32 	%r61, %tid.y;
	mul.lo.s32 	%r2, %r60, %r61;
	mov.u32 	%r3, %tid.x;
	neg.s32 	%r4, %r3;
	@%p4 bra 	BB2_31;
	bra.uni 	BB2_1;

BB2_31:
	setp.ne.s32	%p22, %r2, %r4;
	@%p22 bra 	BB2_33;

	add.u64 	%rd30, %SP, 0;
	add.u64 	%rd31, %SPL, 0;
	st.local.u32 	[%rd31], %r59;
	mov.u64 	%rd32, $str;
	cvta.global.u64 	%rd33, %rd32;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r107, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB2_33;

BB2_1:
	add.s32 	%r5, %r2, %r3;
	shr.s32 	%r62, %r5, 31;
	shr.u32 	%r63, %r62, 27;
	add.s32 	%r64, %r5, %r63;
	shr.s32 	%r6, %r64, 5;
	and.b16  	%rs3, %rs1, 255;
	setp.eq.s16	%p1, %rs3, 0;
	mov.u32 	%r65, %ctaid.x;
	setp.gt.s32	%p5, %r65, 19;
	add.s32 	%r66, %r58, -20;
	selp.b32	%r67, %r66, 0, %p5;
	add.s32 	%r7, %r67, %r65;
	shr.s32 	%r68, %r55, 31;
	shr.u32 	%r69, %r68, 25;
	add.s32 	%r70, %r55, %r69;
	shr.s32 	%r71, %r70, 7;
	shl.b32 	%r72, %r57, 5;
	div.s32 	%r8, %r71, %r72;
	shl.b32 	%r73, %r57, 10;
	div.s32 	%r74, %r71, %r73;
	selp.b32	%r9, %r8, %r74, %p1;
	setp.ne.s32	%p6, %r2, %r4;
	@%p6 bra 	BB2_3;

	add.u64 	%rd7, %SP, 0;
	add.u64 	%rd8, %SPL, 0;
	st.local.u32 	[%rd8], %r7;
	st.local.u32 	[%rd8+4], %r5;
	st.local.u32 	[%rd8+8], %r6;
	st.local.u32 	[%rd8+12], %r8;
	mov.u64 	%rd9, $str$1;
	cvta.global.u64 	%rd10, %rd9;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 0

BB2_3:
	bar.sync 	0;
	// inline asm
	mov.u64 %rd11, %globaltimer;
	// inline asm
	st.shared.u64 	[clock_begin], %rd11;
	st.shared.u64 	[clock_now], %rd11;
	cvta.to.global.u64 	%rd12, %rd4;
	ld.global.u64 	%rd1, [%rd12];
	add.s64 	%rd2, %rd6, 100;
	setp.eq.s64	%p7, %rd2, 0;
	selp.b32	%r10, %r6, %r5, %p1;
	mov.u32 	%r131, 0;
	mov.u32 	%r130, %r131;
	@%p7 bra 	BB2_30;

	selp.b32	%r82, 32, 1024, %p1;
	mad.lo.s32 	%r83, %r7, %r82, %r10;
	mul.lo.s32 	%r84, %r9, %r83;
	shl.b32 	%r11, %r84, 5;
	and.b32  	%r13, %r9, 3;
	mov.u32 	%r131, 0;
	and.b16  	%rs4, %rs2, 255;
	mov.u32 	%r130, %r131;

BB2_5:
	mul.lo.s32 	%r85, %r129, %r56;
	mad.lo.s32 	%r130, %r85, %r130, %r11;
	mov.u32 	%r129, 0;
	setp.eq.s16	%p8, %rs4, 0;
	@%p8 bra 	BB2_17;
	bra.uni 	BB2_6;

BB2_17:
	setp.lt.s32	%p15, %r9, 1;
	@%p15 bra 	BB2_29;

	mov.u32 	%r123, 1;
	mov.u32 	%r129, 0;
	setp.eq.s32	%p16, %r13, 0;
	@%p16 bra 	BB2_19;

	setp.eq.s32	%p17, %r13, 1;
	@%p17 bra 	BB2_21;
	bra.uni 	BB2_22;

BB2_21:
	mov.u32 	%r123, %r129;
	bra.uni 	BB2_25;

BB2_6:
	setp.lt.s32	%p9, %r9, 1;
	@%p9 bra 	BB2_29;

	mov.u32 	%r130, 0;
	setp.eq.s32	%p10, %r13, 0;
	@%p10 bra 	BB2_8;

	setp.eq.s32	%p11, %r13, 1;
	@%p11 bra 	BB2_13;

	setp.eq.s32	%p12, %r13, 2;
	@%p12 bra 	BB2_12;

	mov.u32 	%r130, 1;

BB2_12:
	add.s32 	%r131, %r131, %r130;
	add.s32 	%r130, %r130, 1;

BB2_13:
	add.s32 	%r118, %r131, %r130;
	add.s32 	%r129, %r130, 1;
	mov.u32 	%r131, %r118;
	bra.uni 	BB2_14;

BB2_19:
	mov.u32 	%r126, %r129;
	bra.uni 	BB2_26;

BB2_22:
	setp.eq.s32	%p18, %r13, 2;
	@%p18 bra 	BB2_24;

	mul.wide.s32 	%rd13, %r130, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.u32 	%r130, [%rd14];
	mov.u32 	%r123, 2;

BB2_24:
	mul.wide.s32 	%rd15, %r130, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.u32 	%r130, [%rd16];

BB2_25:
	mul.wide.s32 	%rd17, %r130, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.u32 	%r130, [%rd18];
	add.s32 	%r129, %r123, 1;
	mov.u32 	%r126, %r130;

BB2_26:
	setp.lt.u32	%p19, %r9, 4;
	@%p19 bra 	BB2_27;
	bra.uni 	BB2_28;

BB2_27:
	mov.u32 	%r130, %r126;
	bra.uni 	BB2_29;

BB2_28:
	mul.wide.s32 	%rd19, %r130, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.u32 	%r103, [%rd20];
	mul.wide.s32 	%rd21, %r103, 4;
	add.s64 	%rd22, %rd1, %rd21;
	ld.u32 	%r104, [%rd22];
	mul.wide.s32 	%rd23, %r104, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.u32 	%r105, [%rd24];
	mul.wide.s32 	%rd25, %r105, 4;
	add.s64 	%rd26, %rd1, %rd25;
	ld.u32 	%r130, [%rd26];
	add.s32 	%r129, %r129, 4;
	setp.lt.s32	%p20, %r129, %r9;
	@%p20 bra 	BB2_28;
	bra.uni 	BB2_29;

BB2_8:
	mov.u32 	%r118, %r131;
	mov.u32 	%r129, %r130;
	mov.u32 	%r131, %r130;

BB2_14:
	setp.lt.u32	%p13, %r9, 4;
	@%p13 bra 	BB2_29;

BB2_15:
	add.s32 	%r93, %r118, %r129;
	add.s32 	%r94, %r129, %r93;
	add.s32 	%r95, %r94, %r129;
	add.s32 	%r96, %r95, %r129;
	add.s32 	%r118, %r96, 6;
	add.s32 	%r129, %r129, 4;
	setp.lt.s32	%p14, %r129, %r9;
	@%p14 bra 	BB2_15;

	add.s32 	%r130, %r129, -1;
	mov.u32 	%r131, %r118;

BB2_29:
	// inline asm
	mov.u64 %rd27, %globaltimer;
	// inline asm
	st.shared.u64 	[clock_now], %rd27;
	ld.shared.u64 	%rd28, [clock_begin];
	sub.s64 	%rd29, %rd27, %rd28;
	setp.lt.u64	%p21, %rd29, %rd2;
	@%p21 bra 	BB2_5;

BB2_30:
	cvta.to.global.u64 	%rd3, %rd5;
	bar.sync 	0;
	st.global.u32 	[%rd3+4], %r129;
	add.s32 	%r106, %r131, %r130;
	st.global.u32 	[%rd3+8], %r106;
	st.global.u32 	[%rd3+12], %r131;

BB2_33:
	ret;
}

	// .globl	_Z12memoryKernelPPjPiiyiS_
.visible .entry _Z12memoryKernelPPjPiiyiS_(
	.param .u64 _Z12memoryKernelPPjPiiyiS__param_0,
	.param .u64 _Z12memoryKernelPPjPiiyiS__param_1,
	.param .u32 _Z12memoryKernelPPjPiiyiS__param_2,
	.param .u64 _Z12memoryKernelPPjPiiyiS__param_3,
	.param .u32 _Z12memoryKernelPPjPiiyiS__param_4,
	.param .u64 _Z12memoryKernelPPjPiiyiS__param_5
)
{



	ret;
}



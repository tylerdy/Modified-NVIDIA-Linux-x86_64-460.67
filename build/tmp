usage: nv-nsight-cu-cli [options] [program] [program-arguments]

General Options:
  -h [ --help ]                         Print this help message.
  -v [ --version ]                      Print the version number.
  --mode arg (=launch-and-attach)       Select the mode of interaction with the target application:
                                          launch-and-attach
                                          (launch and attach for profiling)
                                          launch
                                          (launch and suspend for later attach)
                                          attach
                                          (attach to launched application)
  -p [ --port ] arg (=49152)            Base port for connecting to target application
  --max-connections arg (=64)           Maximum number of ports for connecting to target application

Launch Options:
  --injection-path-32 arg (=../linux-desktop-glibc_2_11_3-x86)
                                        Override the default path for the 32-bit injection libraries.
  --injection-path-64 arg               Override the default path for the 64-bit injection libraries.
  --nvtx                                Enable NVTX support.
  --support-32bit                       Support profiling processes launched from 32-bit applications.
  --target-processes arg (=application-only)
                                        Select the processes you want to profile:
                                          application-only
                                          (profile only the application process)
                                          all
                                          (profile the application and its child processes)

Attach Options:
  --hostname arg                        Set hostname / ip address for connection target.

Profile Options:
  --devices arg                         Specify the devices to enable profiling on, separated by comma. By default all 
                                        devices are enabled.
  --kernel-id arg                       Set the identifier to use for matching the kernel to profile. The identifier is
                                        of the format 'context-id:stream-id:[name-operator:]kernel-name:invocation-nr'.
                                        Skip entries that shouldn't be matched, e.g. use '::foobar:2' to match the 
                                        second invocation of 'foobar' in any context or stream. Use ':7:regex:^foo:' to
                                        match any kernel in stream 7 beginning with 'foo' (according to 
                                        --kernel-regex-base).
  -k [ --kernel-regex ] arg             Set the regex to use for matching the kernel name.
  --kernel-regex-base arg (=function)   Set the basis for --kernel-regex, and --kernel-id kernel-name:
                                          function
                                          demangled
                                          mangled
  -c [ --launch-count ] arg             Limit the number of collected profile results. The count is only incremented 
                                        for launches that match the kernel filters.
  -s [ --launch-skip ] arg (=0)         Set the number of kernel launches to skip before starting to profile. The count
                                        is incremented for launches that match the kernel filters only.
  --launch-skip-before-match arg (=0)   Set the number of kernel launches to skip before starting to profile. The count
                                        is incremented for all launches.
  --list-sets                           List all section sets found in the search paths.
  --set arg                             Identifier of section set to collect. If not specified, the default set is 
                                        collected.
  --list-sections                       List all sections found in the search paths.
  --section arg                         Identifier of section to collect. Regex allows matching full section 
                                        identifier. If not specified, the default section set is collected.
  --section-folder arg                  Search path for section files. Not recursive.
  --section-folder-recursive arg        Search path for section files. Recursive.
  --list-rules                          List all analysis rules found in the search paths.
  --apply-rules                         Apply analysis rules for collected sections. If --rule is not set, all 
                                        available rules are applied.
  --rule arg                            Identifier of rule to apply. Enables --apply-rules.
  --list-metrics                        List all metrics to be collected based on selected sections.
  --query-metrics                       Query available metrics for devices on the system. Use --devices and --chips to
                                        filter which devices to query.
  --query-metrics-mode arg (=base)      Set the mode for querying metrics. Implies --query-metrics.
                                        Available modes:
                                          base (default)
                                          (base names for metrics)
                                          suffix
                                          (suffix names for metrics. Use --metrics to specify the base metrics to 
                                        query)
                                          all
                                          (full names for metrics)
  --metrics arg                         Specify all metrics to be profiled, separated by comma.
  --list-chips                          List all supported chips that can be used with --chips.
  --chips arg                           Specify the chips for querying metrics, separated by comma.
  --profile-from-start arg (=1)         Set if application should be profiled from its start. Allowed values:
                                          on/off
                                          yes/no
  --disable-profiler-start-stop         Disable start/stop profiling. When set, cu(da)ProfilerStart/Stop APIs are 
                                        ignored.
  --quiet                               Suppress all profiling output.
  --cache-control arg (=all)            Control the behavior of the GPU caches during profiling. Allowed values:
                                          all
                                          none
  --clock-control arg (=base)           Control the behavior of the GPU clocks during profiling. Allowed values:
                                          base
                                          none
  --nvtx-include arg                    Adds include statement to the NVTX filter, which allows selecting kernels to 
                                        profile based on NVTX ranges.
  --nvtx-exclude arg                    Adds exclude statement to the NVTX filter, which allows selecting kernels to 
                                        profile based on NVTX ranges.

Sampling Options:
  --sampling-interval arg (=auto)       Set the sampling period in the range of [0..31]. Actual frequency is 2 ^ (5 + 
                                        value) cycles. If set to 'auto', the profiler tries to automatically determine 
                                        a high sampling frequency without skipping samples or overflowing the output 
                                        buffer.
  --sampling-max-passes arg (=5)        Set maximum number of passes used for sampling.
  --sampling-buffer-size arg (=33554432)
                                        Set the size of the device-sided allocation for samples in bytes.

File Options:
  -o [ --export ] arg                   Set the output file for writing the profile results. If not set, a temporary 
                                        file will be used which is removed afterwards.
  -f [ --force-overwrite ]              Force overwriting all output files (any existing files will be overwritten).
  -i [ --import ] arg                   Set the input file for reading profile results.
  --open-in-ui                          Open report in UI instead of showing result on terminal.

Console Output Options:
  --csv                                 Use comma-separated values in the output. Implies --units base by default.
  --page arg                            Select report page to output:
                                          details: sections and rules
                                          raw: all collected metrics
  --details-all                         Include all section metrics on details page.
  --units arg                           Set scaling of metric units. Allowed values:
                                          auto (default)
                                          (Scale metrics to fitting magnitude)
                                          base
                                          (Show metrics with their base unit)
  --fp                                  Show all numeric metrics as floating point numbers.
  --summary arg (=none)                 Set the summary output mode:
                                          none
                                          per-gpu
                                          per-kernel
                                          per-nvtx
  --kernel-base arg (=demangled)        Set the basis for kernel name output. See --kernel-regex-base for options.

Use the --mode switch to select how to use the tool:
  Launch and profile a Cuda application:
      nv-nsight-cu-cli CuVectorAdd

  Launch an application for later attach:
      nv-nsight-cu-cli --mode=launch MyApp
  Attach to a previously launched application:
      nv-nsight-cu-cli --mode=attach --hostname 127.0.0.1
  Applications can also be launched or attached-to with the graphical user interface.

Select specific launches for profiling:
  Profile first two launches of kernel 'foo':
      nv-nsight-cu-cli -k foo -c 2 CuVectorAdd

Load an existing report:
      nv-nsight-cu-cli --import myReport

Usage of --nvtx-include and --nvtx-exclude:
  nv-nsight-cu-cli --nvtx --nvtx-include "Domain A@Range A"
     Profile kernels wrapped inside start/end range 'Range A' of 'Domain A'
  nv-nsight-cu-cli --nvtx --nvtx-exclude "Range A]"
    Profile all kernels except kernels wrapped inside push/pop range 'Range A' of <default domain> at the top of the stack.
  nv-nsight-cu-cli --nvtx --nvtx-include "Range A" --nvtx-exclude "Range B"
     Profile kernels wrapped inside start/end range 'Range A' but not inside  'Range B' of <default domain>

